/* Grid layout */


/* In the following demo, you can see gap being used to specify the row-gap and column-gap properties on a grid container, defining the gutters between grid rows and grid columns, respectively: */

.container {
    display: grid;
    grid-template-columns: repeat(auto-fit, 100px);
    grid-auto-rows: 100px;
    justify-content: center;
    gap: 2rem 1rem;
}

body {
    display: flex;
    align-items: center;
    margin: 0;
    min-height: 100vh;
    background: linear-gradient(-45deg, #ff9f4d 10%, #ffc857 0, #ffc857 90%, #ff9f4d 0, #ff9f4d 100%);
}

.container {
    width: 100%;
    max-width: 37.5rem;
    padding: 0.5rem;
    margin: 0 auto;
    box-sizing: border-box;
}

.item {
    width: 100px;
    height: 100px;
    border-radius: 15px;
    background-color: hsl(300deg 23% 97%);
    background-image: linear-gradient(hsl(7deg 100% 64%), hsl(7deg 100% 64%)), linear-gradient(hsl(301deg 100% 15%), hsl(301deg 100% 15%));
    background-size: 50px 10px, 60px 10px;
    background-position: 20px 40px, 20px 60px;
    background-repeat: no-repeat;
}


/* Flex layout */


/* Applying gap to the main axis of a flex container indicates spacing between flex items in a single line of the flex layout.

Here’s column-gap used in a row direction: */

.container2 {
    display: flex;
    flex-wrap: wrap;
    column-gap: 1rem;
}

.flex-eg {
    padding: 1em;
    margin: 0;
    background-color: #ffc857;
}

.item2 {
    width: 100px;
    height: 100px;
    border-radius: 15px;
    background-color: #faf7fa;
    background-image: linear-gradient(#ff5e49, #ff5e49), linear-gradient(#4d004c, #4d004c);
    background-size: 50px 10px, 60px 10px;
    background-position: 20px 40px, 20px 60px;
    background-repeat: no-repeat;
}


/* Here’s row-gap used in a column direction: */

.container3 {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    align-content: flex-start;
    height: 350px;
    row-gap: 1rem;
}

.flex-eg {
    padding: 1em;
    margin: 0;
    background-color: #ffc857;
}

.item3 {
    width: 100px;
    height: 100px;
    border-radius: 15px;
    background-color: #faf7fa;
    background-image: linear-gradient(#ff5e49, #ff5e49), linear-gradient(#4d004c, #4d004c);
    background-size: 50px 10px, 60px 10px;
    background-position: 20px 40px, 20px 60px;
    background-repeat: no-repeat;
}


/* Applying gap to the cross axis of a flex container indicates spacing between flex lines of the flex layout.

Here’s row-gap in a row direction: */

.container4 {
    display: flex;
    flex-wrap: wrap;
    row-gap: 1rem;
}

body {
    padding: 1em;
    margin: 0;
    background-color: #ffc857;
}

.item4 {
    width: 100px;
    height: 100px;
    border-radius: 15px;
    background-color: #faf7fa;
    background-image: linear-gradient(#ff5e49, #ff5e49), linear-gradient(#4d004c, #4d004c);
    background-size: 50px 10px, 60px 10px;
    background-position: 20px 40px, 20px 60px;
    background-repeat: no-repeat;
}


/* Here's column-gap in a column direction: */

.container5 {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    align-content: flex-start;
    height: 350px;
    column-gap: 1rem;
}

body {
    padding: 1em;
    margin: 0;
    background-color: #ffc857;
}

.item5 {
    width: 100px;
    height: 100px;
    border-radius: 15px;
    background-color: #faf7fa;
    background-image: linear-gradient(#ff5e49, #ff5e49), linear-gradient(#4d004c, #4d004c);
    background-size: 50px 10px, 60px 10px;
    background-position: 20px 40px, 20px 60px;
    background-repeat: no-repeat;
}


/* Multi-column layout */


/* column-gap appears in multi-column layouts to create gaps between column boxes, but note that row-gap has no effect since we’re only working in columns. gap can still be used in this context, but only the column-gap will be applied.

As you can see in the next demo, although the gap property has a value of 2rem, it’s only separating items horizontally instead of both directions since we’re working in columns: */

.container6 {
    width: 90%;
    columns: 200px 3;
    column-gap: 3rem;
}

#multi-eg {
    background-color: #eee;
    color: #555;
    font-family: cursive;
    line-height: 1.7;
}

.container6 {
    margin: 2em auto;
    padding: 1em;
    background-color: white;
}

img {
    max-width: 100%;
    display: block;
    margin: 0 0 1em;
}

p {
    margin: 0 0 1em;
}